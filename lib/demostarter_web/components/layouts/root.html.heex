<!DOCTYPE html>
<html lang="en" style="scrollbar-gutter: stable;" data-theme="lego">
  <head>
    {Application.get_env(:live_debugger, :live_debugger_tags)}

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="csrf-token" content={get_csrf_token()} />
    <.live_title default="Demostarter" suffix=" Â· Phoenix Framework">
      {assigns[:page_title]}
    </.live_title>
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&family=JetBrains+Mono:wght@400;500&family=Merriweather:wght@400;700&display=swap" rel="stylesheet">
    <link phx-track-static rel="stylesheet" href={~p"/assets/css/app.css"} />
    <script defer phx-track-static type="text/javascript" src={~p"/assets/js/app.js"}>
    </script>
    <script>
      (() => {
        const setTheme = (theme) => {
          if (theme === "system") {
            localStorage.removeItem("phx:theme");
            document.documentElement.removeAttribute("data-theme");
          } else {
            localStorage.setItem("phx:theme", theme);
            document.documentElement.setAttribute("data-theme", theme);
          }
        };
        if (!document.documentElement.hasAttribute("data-theme")) {
          setTheme(localStorage.getItem("phx:theme") || "system");
        }
        window.addEventListener("storage", (e) => e.key === "phx:theme" && setTheme(e.newValue || "system"));
        window.addEventListener("phx:set-theme", ({ detail: { theme } }) => setTheme(theme));
      })();
    </script>
  </head>
  <body>
    <div class="app-scroll-container" id="app-root">
      <!-- Global grid wrapper - enforces base grid system -->
      <div class="app-grid-wrapper">
        {@inner_content}
      </div>
    </div>

    <script>
      // Failsafe: Prevent any horizontal scrolling
      (function() {
        // Reset horizontal scroll if it somehow occurs
        let preventHorizontal = function() {
          if (window.scrollX !== 0) {
            window.scrollTo(0, window.scrollY);
          }
        };
        
        // Monitor scroll events
        window.addEventListener('scroll', preventHorizontal, { passive: true });
        window.addEventListener('load', preventHorizontal);
        
        // Prevent horizontal swipe on touch devices
        let touchStartX = 0;
        let touchStartY = 0;
        
        document.addEventListener('touchstart', function(e) {
          touchStartX = e.touches[0].clientX;
          touchStartY = e.touches[0].clientY;
        }, { passive: true });
        
        document.addEventListener('touchmove', function(e) {
          let touchEndX = e.touches[0].clientX;
          let touchEndY = e.touches[0].clientY;
          let diffX = Math.abs(touchStartX - touchEndX);
          let diffY = Math.abs(touchStartY - touchEndY);
          
          // If horizontal movement is greater than vertical, prevent it
          if (diffX > diffY && diffX > 10) {
            e.preventDefault();
          }
        }, { passive: false });
      })();
    </script>
  </body>
</html>
