/* See the Tailwind configuration guide for advanced usage
   https://tailwindcss.com/docs/configuration */

@import "tailwindcss" source(none);
@source "../../deps/ash_authentication_phoenix";
@source "../css";
@source "../js";
@source "../../lib/demostarter_web";

/* A Tailwind plugin that makes "hero-#{ICON}" classes available.
   The heroicons installation itself is managed by your mix.exs */
@plugin "../vendor/heroicons";

/* daisyUI Tailwind Plugin. You can update this file by fetching the latest version with:
   curl -sLO https://github.com/saadeghi/daisyui/releases/latest/download/daisyui.js
   Make sure to look at the daisyUI changelog: https://daisyui.com/docs/changelog/ */
@plugin "../vendor/daisyui" {
  themes: false;
}

/* daisyUI theme plugin. You can update this file by fetching the latest version with:
  curl -sLO https://github.com/saadeghi/daisyui/releases/latest/download/daisyui-theme.js
  We ship with two themes, a light one inspired on Phoenix colors and a dark one inspired
  on Elixir colors. Build your own at: https://daisyui.com/theme-generator/ */
@plugin "../vendor/daisyui-theme" {
  name: "dark";
  default: false;
  prefersdark: true;
  color-scheme: "dark";
  --color-base-100: oklch(30.33% 0.016 252.42);
  --color-base-200: oklch(25.26% 0.014 253.1);
  --color-base-300: oklch(20.15% 0.012 254.09);
  --color-base-content: oklch(97.807% 0.029 256.847);
  --color-primary: oklch(58% 0.233 277.117);
  --color-primary-content: oklch(96% 0.018 272.314);
  --color-secondary: oklch(58% 0.233 277.117);
  --color-secondary-content: oklch(96% 0.018 272.314);
  --color-accent: oklch(60% 0.25 292.717);
  --color-accent-content: oklch(96% 0.016 293.756);
  --color-neutral: oklch(37% 0.044 257.287);
  --color-neutral-content: oklch(98% 0.003 247.858);
  --color-info: oklch(58% 0.158 241.966);
  --color-info-content: oklch(97% 0.013 236.62);
  --color-success: oklch(60% 0.118 184.704);
  --color-success-content: oklch(98% 0.014 180.72);
  --color-warning: oklch(66% 0.179 58.318);
  --color-warning-content: oklch(98% 0.022 95.277);
  --color-error: oklch(58% 0.253 17.585);
  --color-error-content: oklch(96% 0.015 12.422);
  --radius-selector: 0.25rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.21875rem;
  --size-field: 0.21875rem;
  --border: 1.5px;
  --depth: 1;
  --noise: 0;
}

@plugin "../vendor/daisyui-theme" {
  name: "NickFirstCustom";
  default: true;
  prefersdark: false;
  color-scheme: "light";
  --color-base-100: oklch(98.71% 0.02 123.72);
  --color-base-200: oklch(91.8% 0.018 123.72);
  --color-base-300: oklch(84.89% 0.017 123.72);
  --color-base-content: oklch(19.742% 0.004 123.72);
  --color-primary: oklch(58.92% 0.199 134.6);
  --color-primary-content: oklch(11.784% 0.039 134.6);
  --color-secondary: oklch(77.75% 0.196 111.09);
  --color-secondary-content: oklch(15.55% 0.039 111.09);
  --color-accent: oklch(85.39% 0.201 100.73);
  --color-accent-content: oklch(17.078% 0.04 100.73);
  --color-neutral: oklch(30.98% 0.075 108.6);
  --color-neutral-content: oklch(86.196% 0.015 108.6);
  --color-info: oklch(86.19% 0.047 224.14);
  --color-info-content: oklch(17.238% 0.009 224.14);
  --color-success: oklch(86.19% 0.047 157.85);
  --color-success-content: oklch(17.238% 0.009 157.85);
  --color-warning: oklch(86.19% 0.047 102.15);
  --color-warning-content: oklch(17.238% 0.009 102.15);
  --color-error: oklch(86.19% 0.047 25.85);
  --color-error-content: oklch(17.238% 0.009 25.85);
  --radius-selector: 0.25rem;
  --radius-field: 0.25rem;
  --radius-box: 0.25rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 0;
  --noise: 0;
}

/* Custom spacing scale - restricts Tailwind to only these values */
@theme {
  --spacing-0: 0;
  --spacing-0_5: 0.125rem;
  --spacing-1: 0.25rem;
  --spacing-1_5: 0.375rem;
  --spacing-2: 0.5rem;
  --spacing-3: 0.75rem;
  --spacing-4: 1rem;
  --spacing-6: 1.5rem;
  --spacing-8: 2rem;
  --spacing-12: 3rem;
  --spacing-16: 4rem;
}

/* Add variants based on LiveView classes */
@custom-variant phx-click-loading (.phx-click-loading&, .phx-click-loading &);
@custom-variant phx-submit-loading (.phx-submit-loading&, .phx-submit-loading &);
@custom-variant phx-change-loading (.phx-change-loading&, .phx-change-loading &);

/* Use the data attribute for dark mode  */
@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));

/* Make LiveView wrapper divs transparent for layout */
[data-phx-session], [data-phx-teleported-src] { display: contents }

/* This file is for your main application CSS */

/* =================================================================
   AUTOMATIC LAYOUT SYSTEM
   Prevents horizontal scrolling and enables responsive design
   ================================================================= */

/* Reset and base layout rules - applies to EVERYTHING */
*, *::before, *::after {
  box-sizing: border-box;
  max-width: 100%;
}

/* Root elements configuration */
html {
  /* Completely prevent horizontal scrolling */
  overflow-x: hidden;
  overflow-y: auto;
  
  /* Smooth scrolling for better UX */
  scroll-behavior: smooth;
  
  /* Consistent background for overscroll areas */
  background-color: var(--color-base-100);
  
  /* Full height to enable proper scrolling */
  height: 100%;
}

body {
  /* Inherit overflow rules from html */
  overflow-x: hidden;
  overflow-y: auto;
  
  /* Remove default margins that could cause issues */
  margin: 0;
  padding: 0;
  width: 100%;
  max-width: 100vw;
  min-height: 100vh;
  
  /* Consistent background color */
  background-color: var(--color-base-100);
}

/* Overscroll behavior for modern browsers */
html, body {
  /* Completely prevent horizontal overscroll */
  overscroll-behavior-x: none;
  
  /* Allow vertical overscroll but contain it */
  overscroll-behavior-y: contain;
}

/* Main content wrapper - automatically applied via root.html.heex */
.app-scroll-container {
  width: 100vw;
  max-width: 100vw;
  min-height: 100vh;
  overflow-x: hidden;
  overflow-y: auto;
}

/* For pages that want snap scrolling, wrap content in snap-container-wrapper */
.snap-container-wrapper {
  scroll-snap-type: y mandatory;
  height: 100vh;
  height: 100dvh; /* Dynamic viewport height for mobile */
  overflow-y: auto;
  overflow-x: hidden;
  width: 100vw;
  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
  overscroll-behavior-y: contain; /* Prevent pull-to-refresh interference */
  position: relative; /* Establish positioning context */
}

/* Disable scroll on parent when snap container is active */
.app-scroll-container:has(.snap-container-wrapper) {
  overflow: hidden;
  height: 100vh;
}

/* Mobile-specific snap scrolling adjustments */
@media (hover: none) and (pointer: coarse) {
  .snap-container-wrapper {
    /* Use proximity on mobile for better UX */
    scroll-snap-type: y proximity !important;
  }
  
  /* Ensure snap sections work properly on mobile */
  .snap-section {
    /* Use dynamic viewport height on mobile */
    height: 100vh;
    height: 100dvh;
    min-height: -webkit-fill-available; /* iOS fallback */
  }
}

/* Additional mobile targeting */
@media (max-width: 768px) {
  .snap-container-wrapper {
    scroll-snap-type: y proximity !important;
  }
}

/* Make sections snap-ready (developers just need to add the class) */
.snap-section {
  scroll-snap-align: start;
  scroll-snap-stop: always; /* Force stop at each section */
  min-height: 100vh;
  height: 100vh;
  width: 100%;
  overflow-x: hidden;
  display: flex;
  flex-direction: column;
}

/* Prevent common horizontal overflow causes */
img, video, iframe, embed, object, svg, canvas {
  max-width: 100%;
  height: auto;
  display: block; /* Removes inline spacing issues */
}

/* Tables need special handling for responsiveness */
table {
  display: block;
  max-width: 100%;
  overflow-x: auto; /* Allow horizontal scroll within table only */
  -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
}

/* Ensure table containers also handle overflow properly */
.overflow-x-auto {
  overflow-x: auto !important;
  -webkit-overflow-scrolling: touch;
}

/* Code blocks should wrap or scroll within their container */
pre, code {
  max-width: 100%;
  overflow-x: auto;
  word-wrap: break-word;
  white-space: pre-wrap;
}

/* Handle long unbreakable text */
p, div, span, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;
}

/* Responsive flex/grid defaults */
.flex {
  flex-wrap: wrap; /* Automatically wrap flex items */
}

.grid {
  /* Responsive grid that adjusts column count automatically */
  grid-template-columns: repeat(auto-fit, minmax(min(100%, 250px), 1fr));
}

/* LiveView specific containers - maintain layout transparency */
[data-phx-main], 
[data-phx-session], 
[data-phx-static],
[data-phx-parent-id] {
  max-width: 100vw;
  overflow-x: hidden;
  display: contents; /* Makes these wrappers "invisible" to layout */
}

/* Ensure all semantic HTML elements respect boundaries */
main, article, section, aside, nav, header, footer {
  max-width: 100%;
  overflow-x: hidden;
}
